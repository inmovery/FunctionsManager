<Window x:Class="FunctionsDesigner.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:FunctionsDesigner"
		xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
		xmlns:vms="clr-namespace:FunctionsDesigner.ViewModels"
		xmlns:valueConverters="clr-namespace:FunctionsDesigner.Converters.ValueConverters"
		xmlns:models="clr-namespace:FunctionsDesigner.Models"
		xmlns:extendedControls="clr-namespace:FunctionsDesigner.ExtendedControls"
		xmlns:liveCharts="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
		xmlns:pointEditor="clr-namespace:FunctionsDesigner.ExtendedControls.PointEditor"
		xmlns:liveChartsCore="clr-namespace:LiveChartsCore;assembly=LiveChartsCore"
		mc:Ignorable="d"
		Title="MainWindow"
		Height="450"
		Width="900"
		MinHeight="450"
		MinWidth="900">
	<!-- ToDo: подумать над ResizeMode="NoResize" -->
	<Window.DataContext>
		<vms:MainWindowViewModel />
	</Window.DataContext>
	<Window.Resources>
		<valueConverters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
		<valueConverters:PointColorToColorBrushConverter x:Key="PointColorToColorBrushConverter" />
		<valueConverters:CountToVisibilityConverter x:Key="CountMoreThanToVisibilityConverter"
													Type="MoreThan" />
	</Window.Resources>
	<Window.InputBindings>
		<KeyBinding Command="{Binding SaveProjectCommand}"
					Gesture="CTRL+S" />
	</Window.InputBindings>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction Command="{Binding WindowClosingRequestedCommand}"
								   PassEventArgsToCommand="true" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<Border Padding="10">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width=".65*" />
				<ColumnDefinition Width=".35*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<Grid Grid.Row="0"
				  Grid.Column="1"
				  Margin="0,0,0,10">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<!-- ToDo: вынести кнопки в отдельный контрол -->
				<Button Grid.Column="0"
						VerticalAlignment="Center"
						Content="Open project"
						Background="{StaticResource GeneralBrush}"
						Command="{Binding OpenProjectCommand}"
						Foreground="{StaticResource WhiteBrush}"
						BorderBrush="{StaticResource WhiteBrush}"
						BorderThickness="2">
					<Button.Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border x:Name="ButtonBorder"
												Width="Auto"
												Height="Auto"
												BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Background}"
												Padding="5"
												CornerRadius="6">
											<StackPanel Orientation="Horizontal"
														HorizontalAlignment="Center">
												<Path x:Name="AddMark"
													  Width="30"
													  Height="24"
													  Fill="White"
													  Data="{StaticResource OpenFolderIcon}"
													  Margin="0, 0, 5, 0" />
												<ContentPresenter x:Name="TextContent"
																  TextBlock.FontSize="16"
																  TextBlock.Foreground="{TemplateBinding Foreground}"
																  VerticalAlignment="Center"
																  TextBlock.FontWeight="SemiBold" />
											</StackPanel>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsDefaulted"
													 Value="True">
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="Black" />
											</Trigger>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Cursor"
														Value="Hand" />
												<!--<Setter Property="TextBlock.Foreground"
														TargetName="TextContent"
														Value="{StaticResource GeneralBrush}" />-->
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="{StaticResource GeneralBrush}" />
											</Trigger>
											<Trigger Property="IsPressed"
													 Value="True">
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="#CAD6FF" />
												<Setter Property="Background"
														TargetName="ButtonBorder"
														Value="{StaticResource GeneralBrush}" />
												<Setter Property="TextBlock.Foreground"
														TargetName="TextContent"
														Value="{StaticResource ForegroundWhiteBrush}" />
												<Setter Property="Opacity"
														TargetName="ButtonBorder"
														Value="1" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Style>
				</Button>
				<Button Grid.Column="2"
						VerticalAlignment="Center"
						Content="Save project"
						Background="{StaticResource GeneralBrush}"
						Command="{Binding SaveProjectCommand}"
						Foreground="{StaticResource WhiteBrush}"
						BorderBrush="{StaticResource WhiteBrush}"
						BorderThickness="2">
					<Button.Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border x:Name="ButtonBorder"
												Width="Auto"
												Height="Auto"
												BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Background}"
												Padding="5"
												CornerRadius="6">
											<StackPanel Orientation="Horizontal"
														HorizontalAlignment="Center">
												<Path x:Name="AddMark"
													  Width="24"
													  Height="24"
													  Fill="White"
													  Data="{StaticResource SaveProjectIcon}"
													  Margin="0, 0, 5, 0" />
												<ContentPresenter x:Name="TextContent"
																  TextBlock.FontSize="16"
																  TextBlock.Foreground="{TemplateBinding Foreground}"
																  VerticalAlignment="Center"
																  TextBlock.FontWeight="SemiBold" />
											</StackPanel>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsDefaulted"
													 Value="True">
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="Black" />
											</Trigger>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Cursor"
														Value="Hand" />
												<!--<Setter Property="TextBlock.Foreground"
														TargetName="TextContent"
														Value="{StaticResource GeneralBrush}" />-->
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="{StaticResource GeneralBrush}" />
											</Trigger>
											<Trigger Property="IsPressed"
													 Value="True">
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="#CAD6FF" />
												<Setter Property="Background"
														TargetName="ButtonBorder"
														Value="{StaticResource GeneralBrush}" />
												<Setter Property="TextBlock.Foreground"
														TargetName="TextContent"
														Value="{StaticResource ForegroundWhiteBrush}" />
												<Setter Property="Opacity"
														TargetName="ButtonBorder"
														Value="1" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Style>
				</Button>
			</Grid>
			<Grid Grid.Row="0"
				  Grid.RowSpan="2"
				  Grid.Column="0">
				<!-- There is a view of piecewise linear function -->
				<!-- ToDO: see: 
				1. https://github.com/Live-Charts/Live-Charts/tree/master/Examples/Wpf/CartesianChart
				2. https://github.com/beto-rodriguez/LiveCharts2/tree/master/samples/WPFSample
				-->
				<liveCharts:CartesianChart DataContext="{Binding Chart}"
										   XAxes="{Binding XAxes}"
										   YAxes="{Binding YAxes}"
										   Series="{Binding Series}"
										   AnimationsSpeed="0"
										   ChartPointPointerDownCommand="MoveDown"
										   TooltipPosition="Hidden" />
				<!-- ZoomMode="Both" -->
			</Grid>
			<Grid Grid.Row="1"
				  Grid.Column="1"
				  HorizontalAlignment="Stretch">
				<Grid.RowDefinitions>
					<RowDefinition Height="40" />
					<RowDefinition Height="30" />
					<RowDefinition Height="*" />
					<RowDefinition Height="60" />
				</Grid.RowDefinitions>
				<StackPanel Grid.Row="0"
							Orientation="Horizontal"
							Margin="5,0,0,0">
					<TextBlock Text="Function: "
							   Foreground="{StaticResource BlackBrush}"
							   FontSize="{StaticResource BigFontSize}"
							   VerticalAlignment="Center"
							   FontWeight="SemiBold" />

					<ComboBox ItemsSource="{Binding Functions}"
							  SelectedValue="{Binding SelectedFunction}"
							  FontSize="15"
							  Padding="5,0,0,0"
							  Margin="5,0,0,0"
							  FontWeight="SemiBold"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Center"
							  ToolTip="False"
							  Style="{StaticResource ComboBoxStyle}"
							  Width="160"
							  Height="35">
						<ComboBox.ItemTemplate>
							<DataTemplate DataType="{x:Type vms:FunctionVm}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Column="0"
											   HorizontalAlignment="Left"
											   Text="{Binding Function.Name}" />
									<Ellipse Grid.Column="1"
											 HorizontalAlignment="Right"
											 Fill="{Binding Properties.Stroke, Converter={StaticResource PointColorToColorBrushConverter}}"
											 Visibility="{Binding Function.FunctionType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static models:FunctionType.Used}}"
											 Height="15"
											 Width="15"
											 Margin="0,0,5,0"
											 StrokeThickness="5" />
								</Grid>
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<Button Style="{StaticResource RegularButtonTemplate}"
							Margin="15,0,0,0"
							Command="{Binding AddFunctionCommand}">
						<ContentControl Content="{StaticResource AddIconBlackTemplate}" />
					</Button>
				</StackPanel>
				<Grid Grid.Row="1"
					  VerticalAlignment="Center"
					  HorizontalAlignment="Left"
					  Margin="5,0,0,0"
					  Width="200"
					  Visibility="{Binding SelectedFunction.Function.Points.Count, Converter={StaticResource CountMoreThanToVisibilityConverter}, ConverterParameter='0'}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="10" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
							   HorizontalAlignment="Center"
							   FontSize="{StaticResource SuperBigFontSize}"
							   FontWeight="Bold"
							   Text="X" />

					<TextBlock Grid.Column="2"
							   HorizontalAlignment="Center"
							   FontSize="{StaticResource SuperBigFontSize}"
							   FontWeight="Bold"
							   Text="Y" />
				</Grid>
				<extendedControls:WheelSpeedScrollViewer Grid.Row="2"
														 VerticalScrollBarVisibility="Auto"
														 HorizontalScrollBarVisibility="Disabled"
														 CanContentScroll="True"
														 HorizontalAlignment="Left"
														 Style="{StaticResource CustomScrollViewerStyle}">
					<ItemsControl ItemsSource="{Binding SelectedFunction.Function.Points}"
								  Width="240">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type models:PointVm}">
								<pointEditor:PointEditor Margin="5"
														 ParameterX="{Binding X, Mode=TwoWay}"
														 ParameterY="{Binding Y, Mode=TwoWay}"
														 RemovePointCommand="{Binding DataContext.SelectedFunction.RemovePointCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</extendedControls:WheelSpeedScrollViewer>

				<Grid Grid.Row="3">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width=".25*" />
						<ColumnDefinition Width=".25*" />
						<ColumnDefinition Width=".5*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>

					<pointEditor:PointEditor Grid.Row="0"
											 Grid.Column="0"
											 Grid.ColumnSpan="2"
											 Grid.RowSpan="2"
											 VerticalAlignment="Center"
											 ParameterX="{Binding SelectedFunction.NewXParameter, Mode=TwoWay}"
											 ParameterY="{Binding SelectedFunction.NewYParameter, Mode=TwoWay}"
											 DisableDeletion="True"
											 Margin="5,0" />

					<Button Grid.Row="0"
							Grid.RowSpan="2"
							Grid.Column="2"
							VerticalAlignment="Center"
							Content="Add point"
							Background="{StaticResource GeneralBrush}"
							Command="{Binding SelectedFunction.AddPointCommand}"
							Foreground="{StaticResource WhiteBrush}"
							BorderBrush="{StaticResource WhiteBrush}"
							BorderThickness="2">
						<Button.Style>
							<Style TargetType="{x:Type Button}">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border x:Name="ButtonBorder"
													Width="Auto"
													Height="Auto"
													BorderBrush="{TemplateBinding BorderBrush}"
													BorderThickness="{TemplateBinding BorderThickness}"
													Background="{TemplateBinding Background}"
													Padding="5"
													CornerRadius="6">
												<StackPanel Orientation="Horizontal"
															HorizontalAlignment="Center">
													<Path x:Name="AddMark"
														  Width="26"
														  Height="26"
														  Fill="White"
														  Data="{StaticResource AddIcon}"
														  Margin="0, 0, 10, 0" />
													<ContentPresenter x:Name="TextContent"
																	  TextBlock.FontSize="16"
																	  TextBlock.Foreground="{TemplateBinding Foreground}"
																	  VerticalAlignment="Center"
																	  TextBlock.FontWeight="SemiBold" />
												</StackPanel>
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsDefaulted"
														 Value="True">
													<Setter Property="BorderBrush"
															TargetName="ButtonBorder"
															Value="Black" />
												</Trigger>
												<Trigger Property="IsMouseOver"
														 Value="True">
													<Setter Property="Cursor"
															Value="Hand" />
													<!--<Setter Property="TextBlock.Foreground"
														TargetName="TextContent"
														Value="{StaticResource GeneralBrush}" />-->
													<Setter Property="BorderBrush"
															TargetName="ButtonBorder"
															Value="{StaticResource GeneralBrush}" />
												</Trigger>
												<Trigger Property="IsPressed"
														 Value="True">
													<Setter Property="BorderBrush"
															TargetName="ButtonBorder"
															Value="#CAD6FF" />
													<Setter Property="Background"
															TargetName="ButtonBorder"
															Value="{StaticResource GeneralBrush}" />
													<Setter Property="TextBlock.Foreground"
															TargetName="TextContent"
															Value="{StaticResource ForegroundWhiteBrush}" />
													<Setter Property="Opacity"
															TargetName="ButtonBorder"
															Value="1" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Button.Style>
					</Button>
					<Grid.Style>
						<Style TargetType="{x:Type Grid}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsUnusedFunctionSelected}"
											 Value="True">
									<Setter Property="Grid.Opacity"
											Value="0.65" />
									<Setter Property="IsEnabled"
											Value="False" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Grid.Style>
				</Grid>
			</Grid>
		</Grid>
	</Border>
</Window>
