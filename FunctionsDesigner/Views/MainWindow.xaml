<Window x:Class="FunctionsDesigner.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:FunctionsDesigner"
		xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
		xmlns:vms="clr-namespace:FunctionsDesigner.ViewModels"
		xmlns:valueConverters="clr-namespace:FunctionsDesigner.Converters.ValueConverters"
		xmlns:models="clr-namespace:FunctionsDesigner.Models"
		xmlns:extendedControls="clr-namespace:FunctionsDesigner.ExtendedControls"
		ResizeMode="NoResize"
		mc:Ignorable="d"
		Title="MainWindow"
		Height="450"
		Width="900">
	<Window.DataContext>
		<vms:MainWindowViewModel />
	</Window.DataContext>
	<Window.Resources>
		<valueConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	</Window.Resources>
	<Window.InputBindings>
		<KeyBinding Command="{Binding SaveProjectCommand}"
					Gesture="CTRL+S" />
	</Window.InputBindings>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction Command="{Binding WindowClosingRequestedCommand}"
								   PassEventArgsToCommand="true" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<Border Padding="10">
		<Grid HorizontalAlignment="Right">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width=".65*" />
				<ColumnDefinition Width=".35*" />
			</Grid.ColumnDefinitions>
			<Grid Grid.Column="0">
				<!-- There is a view of piecewise linear function -->
			</Grid>
			<Grid Grid.Column="1"
				  HorizontalAlignment="Stretch">
				<Grid.RowDefinitions>
					<RowDefinition Height="40" />
					<RowDefinition Height="30" />
					<RowDefinition Height="*" />
					<RowDefinition Height="60" />
				</Grid.RowDefinitions>
				<StackPanel Grid.Row="0"
							Orientation="Horizontal"
							Margin="10,0,0,0">
					<TextBlock Text="Function: "
							   Foreground="{StaticResource BlackBrush}"
							   FontSize="{StaticResource BigFontSize}"
							   VerticalAlignment="Center"
							   FontWeight="SemiBold" />

					<ComboBox ItemsSource="{Binding Functions}"
							  SelectedValue="{Binding SelectedFunction}"
							  FontSize="15"
							  Padding="5,0,0,0"
							  Margin="5,0,0,0"
							  FontWeight="SemiBold"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Center"
							  ToolTip="False"
							  Style="{StaticResource ComboBoxStyle}"
							  Width="140"
							  Height="35">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Name}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<Button Style="{StaticResource RegularButtonTemplate}"
							Margin="5,0,0,0">
						<ContentControl Content="{StaticResource AddIconBlackTemplate}" />
					</Button>
				</StackPanel>
				<Grid Grid.Row="1"
					  VerticalAlignment="Center"
					  HorizontalAlignment="Left"
					  Margin="5,0,0,0"
					  Width="200">
					<!-- ToDo: add converter on count of points with hidden visibility param -->
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="10" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
							   HorizontalAlignment="Center"
							   FontSize="{StaticResource SuperBigFontSize}"
							   FontWeight="Bold"
							   Text="X" />

					<TextBlock Grid.Column="2"
							   HorizontalAlignment="Center"
							   FontSize="{StaticResource SuperBigFontSize}"
							   FontWeight="Bold"
							   Text="Y" />
				</Grid>
				<extendedControls:WheelSpeedScrollViewer Grid.Row="2"
														 VerticalScrollBarVisibility="Auto"
														 HorizontalScrollBarVisibility="Disabled"
														 CanContentScroll="True"
														 HorizontalAlignment="Left"
														 Style="{StaticResource CustomScrollViewerStyle}">
					<ItemsControl ItemsSource="{Binding SelectedFunction.Points}"
								  Width="240">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type models:PointVm}">
								<local:PointEditor Margin="5"
												   ParameterX="{Binding X}"
												   ParameterY="{Binding Y}" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</extendedControls:WheelSpeedScrollViewer>

				<Button Grid.Row="3"
						VerticalAlignment="Top"
						Content="Add point"
						Background="{StaticResource GeneralBrush}"
						Command="{Binding AddPointCommand}"
						Foreground="{StaticResource WhiteBrush}"
						BorderBrush="{StaticResource WhiteBrush}"
						BorderThickness="2">
					<Button.Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border x:Name="ButtonBorder"
												Width="Auto"
												Height="Auto"
												Margin="10"
												BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Background}"
												Padding="5"
												CornerRadius="6">
											<StackPanel Orientation="Horizontal"
														HorizontalAlignment="Center">
												<Path x:Name="AddMark"
													  Width="26"
													  Height="26"
													  Fill="White"
													  Data="{StaticResource AddIcon}"
													  Margin="0, 0, 10, 0" />
												<ContentPresenter x:Name="TextContent"
																  TextBlock.FontSize="16"
																  TextBlock.Foreground="{TemplateBinding Foreground}"
																  VerticalAlignment="Center"
																  TextBlock.FontWeight="SemiBold" />
											</StackPanel>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsDefaulted"
													 Value="True">
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="Black" />
											</Trigger>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Cursor"
														Value="Hand" />
												<!--<Setter Property="TextBlock.Foreground"
														TargetName="TextContent"
														Value="{StaticResource GeneralBrush}" />-->
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="{StaticResource GeneralBrush}" />
											</Trigger>
											<Trigger Property="IsPressed"
													 Value="True">
												<Setter Property="BorderBrush"
														TargetName="ButtonBorder"
														Value="#CAD6FF" />
												<Setter Property="Background"
														TargetName="ButtonBorder"
														Value="{StaticResource GeneralBrush}" />
												<Setter Property="TextBlock.Foreground"
														TargetName="TextContent"
														Value="{StaticResource ForegroundWhiteBrush}" />
												<Setter Property="Opacity"
														TargetName="ButtonBorder"
														Value="1" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Style>
				</Button>

			</Grid>
		</Grid>
	</Border>
</Window>
